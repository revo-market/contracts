/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FarmbotERC20, FarmbotERC20Interface } from "../FarmbotERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d37806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610a1a565b60405180910390f35b6100d060048036038101906100cb9190610917565b610239565b6040516100dd91906109ff565b60405180910390f35b6100ee610250565b6040516100fb9190610a7c565b60405180910390f35b61011e600480360381019061011991906108c8565b610256565b60405161012b91906109ff565b60405180910390f35b61013c610421565b6040516101499190610a97565b60405180910390f35b61016c60048036038101906101679190610863565b610426565b6040516101799190610a7c565b60405180910390f35b61018a61043e565b6040516101979190610a1a565b60405180910390f35b6101ba60048036038101906101b59190610917565b6104cc565b6040516101c791906109ff565b60405180910390f35b6101ea60048036038101906101e5919061088c565b6104e3565b6040516101f79190610a7c565b60405180910390f35b6040518060400160405280601081526020017f4661726d626f7420465020546f6b656e0000000000000000000000000000000081525081565b6000610246338484610508565b6001905092915050565b60015481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461040b5761038a82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105f390919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61041684848461064c565b600190509392505050565b601281565b60026020528060005260406000206000915090505481565b6000805461044b90610be0565b80601f016020809104026020016040519081016040528092919081815260200182805461047790610be0565b80156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b505050505081565b60006104d933848461064c565b6001905092915050565b6003602052816000526040600020602052806000526040600020600091509150505481565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516105e69190610a7c565b60405180910390a3505050565b60008282846106029190610b24565b9150811115610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90610a3c565b60405180910390fd5b92915050565b61069e81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105f390919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073381600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107e090919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107d39190610a7c565b60405180910390a3505050565b60008282846107ef9190610ace565b9150811015610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90610a5c565b60405180910390fd5b92915050565b60008135905061084881610cd3565b92915050565b60008135905061085d81610cea565b92915050565b60006020828403121561087557600080fd5b600061088384828501610839565b91505092915050565b6000806040838503121561089f57600080fd5b60006108ad85828601610839565b92505060206108be85828601610839565b9150509250929050565b6000806000606084860312156108dd57600080fd5b60006108eb86828701610839565b93505060206108fc86828701610839565b925050604061090d8682870161084e565b9150509250925092565b6000806040838503121561092a57600080fd5b600061093885828601610839565b92505060206109498582860161084e565b9150509250929050565b61095c81610b6a565b82525050565b600061096d82610ab2565b6109778185610abd565b9350610987818560208601610bad565b61099081610c70565b840191505092915050565b60006109a8601583610abd565b91506109b382610c81565b602082019050919050565b60006109cb601483610abd565b91506109d682610caa565b602082019050919050565b6109ea81610b96565b82525050565b6109f981610ba0565b82525050565b6000602082019050610a146000830184610953565b92915050565b60006020820190508181036000830152610a348184610962565b905092915050565b60006020820190508181036000830152610a558161099b565b9050919050565b60006020820190508181036000830152610a75816109be565b9050919050565b6000602082019050610a9160008301846109e1565b92915050565b6000602082019050610aac60008301846109f0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610ad982610b96565b9150610ae483610b96565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1957610b18610c12565b5b828201905092915050565b6000610b2f82610b96565b9150610b3a83610b96565b925082821015610b4d57610b4c610c12565b5b828203905092915050565b6000610b6382610b76565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610bcb578082015181840152602081019050610bb0565b83811115610bda576000848401525b50505050565b60006002820490506001821680610bf857607f821691505b60208210811415610c0c57610c0b610c41565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b610cdc81610b58565b8114610ce757600080fd5b50565b610cf381610b96565b8114610cfe57600080fd5b5056fea2646970667358221220ec6b86d03d9ee430865c5f49b2d6fcf25972528b72c507365883e631c01d497c64736f6c63430008040033";

export class FarmbotERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FarmbotERC20> {
    return super.deploy(overrides || {}) as Promise<FarmbotERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FarmbotERC20 {
    return super.attach(address) as FarmbotERC20;
  }
  connect(signer: Signer): FarmbotERC20__factory {
    return super.connect(signer) as FarmbotERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmbotERC20Interface {
    return new utils.Interface(_abi) as FarmbotERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FarmbotERC20 {
    return new Contract(address, _abi, signerOrProvider) as FarmbotERC20;
  }
}
