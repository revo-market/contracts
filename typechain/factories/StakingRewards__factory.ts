/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistribution",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
    ],
    name: "setRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "updatePeriodFinish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600655600060075562093a806008553480156200002257600080fd5b5060405162002d7038038062002d70833981810160405281019062000048919062000225565b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000bc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b390620002f6565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60008260405162000130929190620002c9565b60405180910390a150600160038190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620003a0565b6000815190506200021f8162000386565b92915050565b600080600080608085870312156200023c57600080fd5b60006200024c878288016200020e565b94505060206200025f878288016200020e565b935050604062000272878288016200020e565b925050606062000285878288016200020e565b91505092959194509250565b6200029c8162000329565b82525050565b6000620002b160198362000318565b9150620002be826200035d565b602082019050919050565b6000604082019050620002e0600083018562000291565b620002ef602083018462000291565b9392505050565b600060208201905081810360008301526200031181620002a2565b9050919050565b600082825260208201905092915050565b600062000336826200033d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4f776e657220616464726573732063616e6e6f74206265203000000000000000600082015250565b620003918162000329565b81146200039d57600080fd5b50565b6129c080620003b06000396000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c806372f702f311610104578063a694fc3a116100a2578063d1af0c7d11610071578063d1af0c7d146104d1578063df136d65146104ef578063e9fad8ee1461050d578063ebe2b12b14610517576101ce565b8063a694fc3a1461045d578063c8f33c9114610479578063cc1a378f14610497578063cd3daf9d146104b3576101ce565b806380faa57d116100de57806380faa57d146103d55780638980f11f146103f35780638b8763471461040f5780638da5cb5b1461043f576101ce565b806372f702f31461038f57806379ba5097146103ad5780637b0a47ee146103b7576101ce565b8063386a9525116101715780633fc6df6e1161014b5780633fc6df6e1461030757806353a47bb714610325578063556f6e6b1461034357806370a082311461035f576101ce565b8063386a9525146102c35780633c6b16ab146102e15780633d18b912146102fd576101ce565b806318160ddd116101ad57806318160ddd1461024f578063197621431461026d5780631c1f78eb146102895780632e1a7d4d146102a7576101ce565b80628cc262146101d35780630700037d146102035780631627540c14610233575b600080fd5b6101ed60048036038101906101e89190611e26565b610535565b6040516101fa91906123b9565b60405180910390f35b61021d60048036038101906102189190611e26565b610653565b60405161022a91906123b9565b60405180910390f35b61024d60048036038101906102489190611e26565b61066b565b005b6102576106ee565b60405161026491906123b9565b60405180910390f35b61028760048036038101906102829190611e26565b6106f8565b005b610291610744565b60405161029e91906123b9565b60405180910390f35b6102c160048036038101906102bc9190611eb4565b610762565b005b6102cb610a2e565b6040516102d891906123b9565b60405180910390f35b6102fb60048036038101906102f69190611eb4565b610a34565b005b610305610d9a565b005b61030f611006565b60405161031c9190612158565b60405180910390f35b61032d61102c565b60405161033a9190612158565b60405180910390f35b61035d60048036038101906103589190611eb4565b611052565b005b61037960048036038101906103749190611e26565b61114a565b60405161038691906123b9565b60405180910390f35b610397611193565b6040516103a491906121fc565b60405180910390f35b6103b56111b9565b005b6103bf61136a565b6040516103cc91906123b9565b60405180910390f35b6103dd611370565b6040516103ea91906123b9565b60405180910390f35b61040d60048036038101906104089190611e4f565b611383565b005b61042960048036038101906104249190611e26565b6114a4565b60405161043691906123b9565b60405180910390f35b6104476114bc565b6040516104549190612158565b60405180910390f35b61047760048036038101906104729190611eb4565b6114e0565b005b6104816117ae565b60405161048e91906123b9565b60405180910390f35b6104b160048036038101906104ac9190611eb4565b6117b4565b005b6104bb611843565b6040516104c891906123b9565b60405180910390f35b6104d96118d1565b6040516104e691906121fc565b60405180910390f35b6104f76118f7565b60405161050491906123b9565b60405180910390f35b6105156118fd565b005b61051f61194f565b60405161052c91906123b9565b60405180910390f35b600061064c600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461063e670de0b6b3a76400006106306105e2600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105d4611843565b61195590919063ffffffff16565b600e60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461196b90919063ffffffff16565b61198190919063ffffffff16565b61199790919063ffffffff16565b9050919050565b600c6020528060005260406000206000915090505481565b6106736119ad565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22816040516106e39190612158565b60405180910390a150565b6000600d54905090565b6107006119ad565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061075d60085460075461196b90919063ffffffff16565b905090565b600260035414156107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f90612379565b60405180910390fd5b6002600381905550336107b9611843565b600a819055506107c7611370565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108945761080a81610535565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600082116108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce906122d9565b60405180910390fd5b6108ec82600d5461195590919063ffffffff16565b600d8190555061094482600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461195590919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109d43383600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a3d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d583604051610a1a91906123b9565b60405180910390a250600160038190555050565b60085481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abb90612339565b60405180910390fd5b6000610ace611843565b600a81905550610adc611370565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ba957610b1f81610535565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6006544210610bd257610bc76008548361198190919063ffffffff16565b600781905550610c34565b6000610be94260065461195590919063ffffffff16565b90506000610c026007548361196b90919063ffffffff16565b9050610c2b600854610c1d838761199790919063ffffffff16565b61198190919063ffffffff16565b60078190555050505b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c919190612158565b60206040518083038186803b158015610ca957600080fd5b505afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611edd565b9050610cf86008548261198190919063ffffffff16565b6007541115610d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d33906122f9565b60405180910390fd5b42600981905550610d586008544261199790919063ffffffff16565b6006819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d83604051610d8d91906123b9565b60405180910390a1505050565b60026003541415610de0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd790612379565b60405180910390fd5b600260038190555033610df1611843565b600a81905550610dff611370565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ecc57610e4281610535565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610ffa576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fab3382600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a3d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610ff191906123b9565b60405180910390a25b50506001600381905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61105a6119ad565b6000611064611843565b600a81905550611072611370565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461113f576110b581610535565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b816006819055505050565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124090612259565b60405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516112bc929190612173565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60075481565b600061137e42600654611ac3565b905090565b61138b6119ad565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561141c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141390612399565b60405180910390fd5b61146760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16611a3d9092919063ffffffff16565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2882826040516114989291906121d3565b60405180910390a15050565b600b6020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026003541415611526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151d90612379565b60405180910390fd5b600260038190555033611537611843565b600a81905550611545611370565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116125761158881610535565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008211611655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164c90612279565b60405180910390fd5b61166a82600d5461199790919063ffffffff16565b600d819055506116c282600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461199790919063ffffffff16565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611754333084600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611adc909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8360405161179a91906123b9565b60405180910390a250600160038190555050565b60095481565b6117bc6119ad565b6006544211611800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f790612239565b60405180910390fd5b806008819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d360085460405161183891906123b9565b60405180910390a150565b600080600d54141561185957600a5490506118ce565b6118cb6118ba600d546118ac670de0b6b3a764000061189e600754611890600954611882611370565b61195590919063ffffffff16565b61196b90919063ffffffff16565b61196b90919063ffffffff16565b61198190919063ffffffff16565b600a5461199790919063ffffffff16565b90505b90565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b611945600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610762565b61194d610d9a565b565b60065481565b6000818361196391906124e7565b905092915050565b60008183611979919061248d565b905092915050565b6000818361198f919061245c565b905092915050565b600081836119a59190612406565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a32906122b9565b60405180910390fd5b565b611abe8363a9059cbb60e01b8484604051602401611a5c9291906121d3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b65565b505050565b6000818310611ad25781611ad4565b825b905092915050565b611b5f846323b872dd60e01b858585604051602401611afd9392919061219c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b65565b50505050565b6000611bc7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c2c9092919063ffffffff16565b9050600081511115611c275780806020019051810190611be79190611e8b565b611c26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c1d90612359565b60405180910390fd5b5b505050565b6060611c3b8484600085611c44565b90509392505050565b606082471015611c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8090612299565b60405180910390fd5b611c9285611d58565b611cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc890612319565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611cfa9190612141565b60006040518083038185875af1925050503d8060008114611d37576040519150601f19603f3d011682016040523d82523d6000602084013e611d3c565b606091505b5091509150611d4c828286611d6b565b92505050949350505050565b600080823b905060008111915050919050565b60608315611d7b57829050611dcb565b600083511115611d8e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc29190612217565b60405180910390fd5b9392505050565b600081359050611de181612945565b92915050565b600081519050611df68161295c565b92915050565b600081359050611e0b81612973565b92915050565b600081519050611e2081612973565b92915050565b600060208284031215611e3857600080fd5b6000611e4684828501611dd2565b91505092915050565b60008060408385031215611e6257600080fd5b6000611e7085828601611dd2565b9250506020611e8185828601611dfc565b9150509250929050565b600060208284031215611e9d57600080fd5b6000611eab84828501611de7565b91505092915050565b600060208284031215611ec657600080fd5b6000611ed484828501611dfc565b91505092915050565b600060208284031215611eef57600080fd5b6000611efd84828501611e11565b91505092915050565b611f0f8161251b565b82525050565b6000611f20826123d4565b611f2a81856123ea565b9350611f3a818560208601612587565b80840191505092915050565b611f4f81612563565b82525050565b6000611f60826123df565b611f6a81856123f5565b9350611f7a818560208601612587565b611f8381612618565b840191505092915050565b6000611f9b6058836123f5565b9150611fa682612629565b606082019050919050565b6000611fbe6035836123f5565b9150611fc98261269e565b604082019050919050565b6000611fe1600e836123f5565b9150611fec826126ed565b602082019050919050565b60006120046026836123f5565b915061200f82612716565b604082019050919050565b6000612027602f836123f5565b915061203282612765565b604082019050919050565b600061204a6011836123f5565b9150612055826127b4565b602082019050919050565b600061206d6018836123f5565b9150612078826127dd565b602082019050919050565b6000612090601d836123f5565b915061209b82612806565b602082019050919050565b60006120b3602a836123f5565b91506120be8261282f565b604082019050919050565b60006120d6602a836123f5565b91506120e18261287e565b604082019050919050565b60006120f9601f836123f5565b9150612104826128cd565b602082019050919050565b600061211c6021836123f5565b9150612127826128f6565b604082019050919050565b61213b81612559565b82525050565b600061214d8284611f15565b915081905092915050565b600060208201905061216d6000830184611f06565b92915050565b60006040820190506121886000830185611f06565b6121956020830184611f06565b9392505050565b60006060820190506121b16000830186611f06565b6121be6020830185611f06565b6121cb6040830184612132565b949350505050565b60006040820190506121e86000830185611f06565b6121f56020830184612132565b9392505050565b60006020820190506122116000830184611f46565b92915050565b600060208201905081810360008301526122318184611f55565b905092915050565b6000602082019050818103600083015261225281611f8e565b9050919050565b6000602082019050818103600083015261227281611fb1565b9050919050565b6000602082019050818103600083015261229281611fd4565b9050919050565b600060208201905081810360008301526122b281611ff7565b9050919050565b600060208201905081810360008301526122d28161201a565b9050919050565b600060208201905081810360008301526122f28161203d565b9050919050565b6000602082019050818103600083015261231281612060565b9050919050565b6000602082019050818103600083015261233281612083565b9050919050565b60006020820190508181036000830152612352816120a6565b9050919050565b60006020820190508181036000830152612372816120c9565b9050919050565b60006020820190508181036000830152612392816120ec565b9050919050565b600060208201905081810360008301526123b28161210f565b9050919050565b60006020820190506123ce6000830184612132565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061241182612559565b915061241c83612559565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612451576124506125ba565b5b828201905092915050565b600061246782612559565b915061247283612559565b925082612482576124816125e9565b5b828204905092915050565b600061249882612559565b91506124a383612559565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124dc576124db6125ba565b5b828202905092915050565b60006124f282612559565b91506124fd83612559565b9250828210156125105761250f6125ba565b5b828203905092915050565b600061252682612539565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061256e82612575565b9050919050565b600061258082612539565b9050919050565b60005b838110156125a557808201518184015260208101905061258a565b838111156125b4576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f50726576696f7573207265776172647320706572696f64206d7573742062652060008201527f636f6d706c657465206265666f7265206368616e67696e67207468652064757260208201527f6174696f6e20666f7220746865206e657720706572696f640000000000000000604082015250565b7f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560008201527f2063616e20616363657074206f776e6572736869700000000000000000000000602082015250565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660008201527f6f726d207468697320616374696f6e0000000000000000000000000000000000602082015250565b7f43616e6e6f742077697468647261772030000000000000000000000000000000600082015250565b7f50726f76696465642072657761726420746f6f20686967680000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f43616c6c6572206973206e6f742052657761726473446973747269627574696f60008201527f6e20636f6e747261637400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b61294e8161251b565b811461295957600080fd5b50565b6129658161252d565b811461297057600080fd5b50565b61297c81612559565b811461298757600080fd5b5056fea264697066735822122027c00be152c896dea2f7a5cb79463cad0d6a2afa5c5fe340ef1c2834ef6affa664736f6c63430008040033";

export class StakingRewards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _rewardsDistribution: string,
    _rewardsToken: string,
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _owner,
      _rewardsDistribution,
      _rewardsToken,
      _stakingToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  getDeployTransaction(
    _owner: string,
    _rewardsDistribution: string,
    _rewardsToken: string,
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _rewardsDistribution,
      _rewardsToken,
      _stakingToken,
      overrides || {}
    );
  }
  attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
